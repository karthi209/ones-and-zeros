name: build-n-release

on:
  workflow_dispatch:
    inputs:
      build_frontend:
        description: 'Build frontend image?'
        required: true
        default: 'true'
        type: boolean
      build_backend:
        description: 'Build backend image?'
        required: true
        default: 'true'
        type: boolean

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate VERSION.txt
        run: |
          if [[ ! -f "VERSION.txt" ]]; then
            echo "VERSION.txt not found!"
            exit 1
          fi
          if ! grep -q "frontend=" VERSION.txt || ! grep -q "backend=" VERSION.txt; then
            echo "VERSION.txt must contain 'frontend=' and 'backend=' lines."
            exit 1
          fi

      - name: Read current versions from VERSION.txt
        id: read_versions
        run: |
          FRONTEND_VERSION=$(grep "frontend=" VERSION.txt | cut -d '=' -f 2)
          BACKEND_VERSION=$(grep "backend=" VERSION.txt | cut -d '=' -f 2)
          echo "FRONTEND_VERSION=$FRONTEND_VERSION" >> $GITHUB_ENV
          echo "BACKEND_VERSION=$BACKEND_VERSION" >> $GITHUB_ENV

      - name: Increment frontend version
        if: ${{ github.event.inputs.build_frontend == 'true' }}
        run: |
          FRONTEND_NEW_VERSION="v$(echo ${{ env.FRONTEND_VERSION }} | cut -d'.' -f1).$(echo ${{ env.FRONTEND_VERSION }} | cut -d'.' -f2).$(($(echo ${{ env.FRONTEND_VERSION }} | cut -d'.' -f3) + 1))"
          echo "New frontend version: $FRONTEND_NEW_VERSION"
          echo "FRONTEND_NEW_VERSION=$FRONTEND_NEW_VERSION" >> $GITHUB_ENV

      - name: Increment backend version
        if: ${{ github.event.inputs.build_backend == 'true' }}
        run: |
          BACKEND_NEW_VERSION="v$(echo ${{ env.BACKEND_VERSION }} | cut -d'.' -f1).$(echo ${{ env.BACKEND_VERSION }} | cut -d'.' -f2).$(($(echo ${{ env.BACKEND_VERSION }} | cut -d'.' -f3) + 1))"
          echo "New backend version: $BACKEND_NEW_VERSION"
          echo "BACKEND_NEW_VERSION=$BACKEND_NEW_VERSION" >> $GITHUB_ENV

      - name: Build frontend image
        if: ${{ github.event.inputs.build_frontend == 'true' }}
        id: build_frontend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: ghcr.io/karthi209/ones-and-zeros/frontend:${{ env.FRONTEND_NEW_VERSION }}
          push: false

      - name: Push frontend image
        if: ${{ github.event.inputs.build_frontend == 'true' && steps.build_frontend.outcome == 'success' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: ghcr.io/karthi209/ones-and-zeros/frontend:${{ env.FRONTEND_NEW_VERSION }}
          push: true

      - name: Build backend image
        if: ${{ github.event.inputs.build_backend == 'true' }}
        id: build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend/core
          file: Dockerfile
          tags: ghcr.io/karthi209/ones-and-zeros/backend:${{ env.BACKEND_NEW_VERSION }}
          push: false

      - name: Push backend image
        if: ${{ github.event.inputs.build_backend == 'true' && steps.build_backend.outcome == 'success' }}
        uses: docker/build-push-action@v2
        with:
          context: ./backend/core
          file: Dockerfile
          tags: ghcr.io/karthi209/ones-and-zeros/backend:${{ env.BACKEND_NEW_VERSION }}
          push: true

      - name: Generate frontend artifact attestation
        if: ${{ github.event.inputs.build_frontend == 'true' && steps.build_frontend.outcome == 'success' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/karthi209/ones-and-zeros/frontend
          subject-digest: ${{ steps.build_frontend.outputs.digest }}
          push-to-registry: true

      - name: Generate backend artifact attestation
        if: ${{ github.event.inputs.build_backend == 'true' && steps.build_backend.outcome == 'success' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/karthi209/ones-and-zeros/backend
          subject-digest: ${{ steps.build_backend.outputs.digest }}
          push-to-registry: true

      - name: Update VERSION.txt
        run: |
          sed -i "s/frontend=.*/frontend=${{ env.FRONTEND_NEW_VERSION }}/" VERSION.txt
          sed -i "s/backend=.*/backend=${{ env.BACKEND_NEW_VERSION }}/" VERSION.txt
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add VERSION.txt
          git commit -m "Update version for frontend and backend"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}
